import java.util.*;

public class Test {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ListOfUser listOfUser = new ListOfUser();

        System.out.println("=== H·ªÜ TH·ªêNG QU·∫¢N L√ù NH√Ä H√ÄNG ===");

        // ===== ƒêƒÉng k√Ω =====
        System.out.print("Nh·∫≠p username ƒë·ªÉ ƒëƒÉng k√Ω: ");
        String regUser = sc.nextLine();
        System.out.print("Nh·∫≠p password: ");
        String regPass = sc.nextLine();
        System.out.print("Nh·∫≠p l·∫°i password: ");
        String regPass2 = sc.nextLine();
        System.out.print("Nh·∫≠p vai tr√≤ (Qu·∫£n l√Ω/Kh√°ch): ");
        String role = sc.nextLine();

        boolean registered = listOfUser.register(regUser, regPass, regPass2, role);
        if (!registered) {
            System.out.println("‚ùå ƒêƒÉng k√Ω th·∫•t b·∫°i, tho√°t ch∆∞∆°ng tr√¨nh.");
            return;
        }

        // ===== ƒêƒÉng nh·∫≠p =====
        User currentUser = null;
        while (currentUser == null) {
            System.out.print("\nƒêƒÉng nh·∫≠p\nUsername: ");
            String loginUser = sc.nextLine();
            System.out.print("Password: ");
            String loginPass = sc.nextLine();

            currentUser = listOfUser.login(loginUser, loginPass);
            if (currentUser == null) {
                System.out.println("‚ùå Sai th√¥ng tin, th·ª≠ l·∫°i!");
            }
        }
        currentUser.login();

        // ===== Ki·ªÉm tra vai tr√≤ =====
        RestaurantManagement rm = new RestaurantManagement();
        if (currentUser.getRole().equalsIgnoreCase("Qu·∫£n l√Ω")) {
            System.out.println("\n=== CH·ª®C NƒÇNG QU·∫¢N L√ù ===");
            rm.generateReport(); // Qu·∫£n l√Ω ch·ªâ xem b√°o c√°o
            System.out.println("B·∫°n ƒë√£ tho√°t ch∆∞∆°ng tr√¨nh.");
            currentUser.logout();
            sc.close();
            return;
        }

        // ===== V√≤ng l·∫∑p ch√≠nh cho Kh√°ch =====
        boolean running = true;
        while (running) {

            // ===== ƒê·∫∑t b√†n =====
            System.out.print("\nNh·∫≠p s·ªë l∆∞·ª£ng b√†n mu·ªën ƒë·∫∑t: ");
            int soBan = sc.nextInt();
            sc.nextLine();

            List<Table> reservedTables = new ArrayList<>();
            for (int i = 1; i <= soBan; i++) {
                System.out.println("\n--- Nh·∫≠p th√¥ng tin b√†n " + i + " ---");
                System.out.print("Nh·∫≠p ID b√†n: ");
                int tableId = sc.nextInt();
                System.out.print("Nh·∫≠p s·ª©c ch·ª©a b√†n: ");
                int capacity = sc.nextInt();
                System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng kh√°ch ƒëi c√πng: ");
                int numPeople = sc.nextInt();
                sc.nextLine(); // clear buffer

                Table table = new Table(tableId, capacity);
                if (numPeople <= capacity) {
                    table.reserve();
                    reservedTables.add(table);
                    System.out.println("‚úÖ ƒê√£ ƒë·∫∑t b√†n " + tableId + " cho " + numPeople + " ng∆∞·ªùi.");
                } else {
                    System.out.println("‚ö†Ô∏è B√†n " + tableId + " kh√¥ng ƒë·ªß ch·ªó. Kh√¥ng th·ªÉ ƒë·∫∑t.");
                }
            }

            if (reservedTables.isEmpty()) {
                System.out.println("‚ùå Kh√¥ng c√≥ b√†n n√†o ƒë∆∞·ª£c ƒë·∫∑t. Quay l·∫°i menu ch√≠nh.");
                continue;
            }

            // ===== Menu m√≥n ƒÉn =====
            Food phoBo = new Food(1, "Ph·ªü B√≤", 50000.0, "Ph·ªü b√≤ t√°i n·∫°m truy·ªÅn th·ªëng");
            Food phoGa = new Food(2, "Ph·ªü G√†", 45000.0, "Ph·ªü g√† x√© phay");
            Food bunCha = new Food(3, "B√∫n Ch·∫£", 60000.0, "B√∫n ch·∫£ H√† N·ªôi");
            Food goiCuon = new Food(4, "G·ªèi Cu·ªën", 30000.0, "G·ªèi cu·ªën t√¥m th·ªãt");

            List<Food> menu = Arrays.asList(phoBo, phoGa, bunCha, goiCuon);

            // ===== G·ªçi m√≥n =====
            Order order = new Order(1001, new Date(), "Ch∆∞a thanh to√°n");
            int menuChoice;
            do {
                System.out.println("\n=== MENU ===");
                for (Food f : menu) {
                    System.out.println(f.getFoodID() + ". " + f.getName() + " - " + f.getPrice() + " VND");
                }
                System.out.print("Nh·∫≠p ID m√≥n (0 ƒë·ªÉ xong): ");
                menuChoice = sc.nextInt();

                if (menuChoice != 0) {
                    System.out.print("S·ªë l∆∞·ª£ng: ");
                    int qty = sc.nextInt();
                    sc.nextLine();

                    Food selected = null;
                    for (Food f : menu) {
                        if (f.getFoodID() == menuChoice) {
                            selected = f;
                            break;
                        }
                    }

                    if (selected != null) {
                        order.addOrderDetail(new OrderDetail(selected, qty));
                        System.out.println("‚úÖ ƒê√£ th√™m " + qty + " x " + selected.getName());
                    } else {
                        System.out.println("‚ùå M√≥n kh√¥ng t·ªìn t·∫°i!");
                    }
                }
            } while (menuChoice != 0);

            // ===== Thanh to√°n =====
            double total = order.calculateTotal();

            // In h√≥a ƒë∆°n
            System.out.println("\n=== H√ìA ƒê∆†N ===");
            for (OrderDetail d : order.getOrderDetails()) {
                System.out.println(d.getQuantity() + " x " + d.getFood().getName() + " = " + d.subTotal() + " VND");
            }
            System.out.println("T·ªïng c·ªông: " + total + " VND");

            // ===== Nh·∫≠p m√£ gi·∫£m gi√° =====
            boolean discountApplied = false;
            while (!discountApplied) {
                System.out.print("\nNh·∫≠p m√£ gi·∫£m gi√° (n·∫øu kh√¥ng c√≥ th√¨ ƒë·ªÉ tr·ªëng): ");
                String discountCode = sc.nextLine().trim();

                if (discountCode.isEmpty()) {
                    System.out.println("B·∫°n kh√¥ng nh·∫≠p m√£ gi·∫£m gi√°.");
                    System.out.println("1. Nh·∫≠p l·∫°i m√£");
                    System.out.println("2. B·ªè qua v√† ti·∫øp t·ª•c thanh to√°n");
                    System.out.print("L·ª±a ch·ªçn: ");
                    int discountChoice = Integer.parseInt(sc.nextLine().trim());
                    if (discountChoice == 2) break;
                    else if (discountChoice == 1) continue;
                    else System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá, vui l√≤ng nh·∫≠p l·∫°i.");
                } else {
                    if (discountCode.equalsIgnoreCase("DISCOUNT10")) {
                        double newTotal = order.calculateTotal() * 0.9;
                        order.setTotal(newTotal); // c·∫≠p nh·∫≠t t·ªïng ti·ªÅn v√†o order
                        System.out.println("üéâ √Åp d·ª•ng m√£ gi·∫£m gi√° th√†nh c√¥ng! T·ªïng sau gi·∫£m: " + newTotal + " VND");
                        discountApplied = true;
                    } else {
                        System.out.println("‚ùå M√£ gi·∫£m gi√° kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p l·∫°i.");
                    }
                }
            }

            // ===== Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n =====
            System.out.println("\nCh·ªçn ph∆∞∆°ng th·ª©c thanh to√°n:");
            System.out.println("1. Ti·ªÅn m·∫∑t");
            System.out.println("2. Th·∫ª t√≠n d·ª•ng");
            System.out.println("3. V√≠ ƒëi·ªán t·ª≠");
            System.out.print("L·ª±a ch·ªçn: ");
            int payChoice = sc.nextInt();
            sc.nextLine();

            String method = "Ti·ªÅn m·∫∑t";
            if (payChoice == 2) method = "Th·∫ª t√≠n d·ª•ng";
            else if (payChoice == 3) method = "V√≠ ƒëi·ªán t·ª≠";

            Payment payment = new Payment(2001, order.getTotal(), method);
            payment.processPayment();

            // ===== B√°o c√°o qu·∫£n l√Ω =====
            rm.createOrder(order);
            rm.generateReport();

            // ===== H·ªèi ti·∫øp t·ª•c hay tho√°t =====
            System.out.println("\nB·∫°n mu·ªën l√†m g√¨ ti·∫øp theo?");
            System.out.println("1. Ti·∫øp t·ª•c ƒë·∫∑t b√†n v√† g·ªçi m√≥n");
            System.out.println("2. ƒêƒÉng xu·∫•t v√† tho√°t ch∆∞∆°ng tr√¨nh");
            System.out.print("L·ª±a ch·ªçn: ");
            int next = sc.nextInt();
            sc.nextLine();

            if (next == 2) {
                currentUser.logout();
                running = false;
            }
        }

        sc.close();
    }
}
